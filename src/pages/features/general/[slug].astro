---
import { getCollection } from 'astro:content'
import type { GetStaticPaths } from 'astro'
import Layout from '@layouts/Layout.astro'
import Container from '@components/container.astro'
import { Debug } from 'astro:components'
import Link from '@components/ui/link.astro'

// Generate a new path for every collection entry
export async function getStaticPaths() {
	const featuresEntries = await getCollection('features')

	return featuresEntries
		.filter((entry) => entry.slug.includes('general/'))
		.map((entry) => ({
			params: { slug: entry.slug.substring(8) },
			props: { entry }
		}))
}

// Get the entry directly from the prop on render
const { entry } = Astro.props
const { Content } = await entry.render()
---

<Layout title={entry.data.title}>
	<Container>
		<div class="mx-auto my-14 max-w-5xl">
			<div class="flex flex-row items-center gap-2">
				<a href="/features" class="text-white hover:text-zinc-400" style="text">Features</a>
				<div class="text-white">/</div>
				<p class="capitalize text-zinc-400">
					{entry.data.category}
				</p>
			</div>
			<h1 class="mt-1 text-4xl font-bold text-white lg:text-5xl lg:leading-tight lg:tracking-tight">
				{entry.data.title}
			</h1>
			<div class="mt-3 flex flex-wrap items-center gap-2 md:flex-nowrap">
				<span class="text-zinc-400">
					{entry.data.author}
				</span>
				<span class="text-zinc-400">•</span>
				<time class="text-zinc-400" datetime={entry.data.publishDate.toISOString()}>
					{entry.data.publishDate.toDateString()}
				</time>
				<span class="hidden text-zinc-400 md:block">•</span>
				<div class="flex w-full flex-wrap gap-3 md:w-auto">
					{entry.data.tags.map((tag) => <span class="text-sm text-zinc-500">#{tag}</span>)}
				</div>
			</div>
		</div>

		<div class="prose-md prose mx-auto mt-1 max-w-5xl">
			<Content />
		</div>
		<div class="mt-8 text-center">
			<a href="/features" class="btn btn-primary">Back to Features</a>
		</div>
	</Container>
</Layout>
